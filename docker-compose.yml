version: '3.8'
services:
  database:
    image: mongo:latest
    hostname: database
    container_name: mongodb
    ports:
      - "27017:27017"
    restart: always
    volumes:
      # Volumenes
      - mongodb:/data/db
      - mongoconfig:/data/configdb
    networks:
      - default_network

  grpc_server:
    build:
      context: . 
      dockerfile: grpc_server/python/Dockerfile
    container_name: grpc_server
    environment:
      - MONGO_URI=mongodb://database:27017
      - WEBSOCKET_SERVER_URL=http://ws_server:5001/notify
    hostname: grpc_server
    ports:
      - "50051:50051"
    depends_on:
      - database
    networks:
      - default_network

  rest_server:
    build: 
      context: .
      dockerfile: rest_server/Dockerfile
    container_name: rest_server
    environment:
      - MONGO_URI=mongodb://database:27017
      - WEBSOCKET_SERVER_URL=http://ws_server:5001/notify
    hostname: rest_server
    ports:
      - "5000:5000"
    depends_on:
      - database
      - ws_server
    networks:
      - default_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - default_network

  rabbitmq_server:
    build:
      context: .
      dockerfile: rabbitmq_server/Dockerfile
    container_name: rabbitmq_server
    hostname: rabbitmq_server
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - MONGO_URI=mongodb://database:27017
      - WEBSOCKET_SERVER_URL=http://ws_server:5001/notify
    ports: 
      - "5002:5002"
    depends_on:
      - database
      - rabbitmq
    networks:
      - default_network

  ws_server:
    build:
      context: ./ws_server
      dockerfile: Dockerfile
    container_name: ws_server
    hostname: ws_server
    ports:
      - "5001:5001"
    networks:
      - default_network

  grpc_client:
    build:
      context: ./grpc_client/python
      dockerfile: Dockerfile
    container_name: grpc_client
    hostname: grpc_client
    depends_on:
      - grpc_server
    networks:
      - default_network
    command: tail -f /dev/null

  rest_client:
    build: 
      context: ./rest_client
      dockerfile: Dockerfile
    container_name: rest_client
    hostname: rest_client
    depends_on:
      - rest_server
    networks:
      - default_network
    command: tail -f /dev/null

  rabbitmq_client:
    build:
      context: ./rabbitmq_client
      dockerfile: Dockerfile
    container_name: rabbitmq_client
    hostname: rabbitmq_client
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
    depends_on:
      - rabbitmq_server
    networks:
      - default_network
    command: tail -f /dev/null
    
  ws_client:
    build:
      context: ./ws_client
      dockerfile: Dockerfile
    container_name: ws_client
    hostname: ws_client
    depends_on:
      - ws_server
    networks:
      - default_network

volumes:
  mongodb:
  mongoconfig:
  

networks:
  default_network:
    driver: bridge


